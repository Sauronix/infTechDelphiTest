SET NAMES WIN1251^
/* Create database : InfTech       */
CONNECT "D:\DelphiProj\infTechDelphiTest\db\inftech.gdb" ^

/***********************************/
/*              Tables             */
/***********************************/

/* Table: T_CLIENTS  */
CREATE TABLE T_CLIENTS (
       ID INTEGER NOT NULL,
       CLIENT_NAME VARCHAR(250) CHARACTER SET WIN1251,
       CLIENT_BALANCE NUMERIC(15,2) DEFAULT 0 NOT NULL,
       CLIENT_INN DOUBLE PRECISION NOT NULL,
      CONSTRAINT T_CLIENTS_PK PRIMARY KEY (ID)
)^

CREATE UNIQUE INDEX T_CLIENTS_PK ON T_CLIENTS(ID)^

/* Table: T_OPERATIONS  */
CREATE TABLE T_OPERATIONS (
       ID INTEGER NOT NULL,
       ID_CLIENT INTEGER NOT NULL,
       SUM_OPER NUMERIC(15,2) NOT NULL,
       DATE_OPER DATE NOT NULL,
      CONSTRAINT T_OPERATIONS_PK PRIMARY KEY (ID)
)^

CREATE INDEX FK_OPERATIONS_CLIENTS ON T_OPERATIONS(ID_CLIENT)^

CREATE UNIQUE INDEX T_OPERATIONS_PK ON T_OPERATIONS(ID)^

/*---------------------------*/
/*  Foreign Key Definitions  */
/*---------------------------*/
ALTER TABLE T_OPERATIONS ADD CONSTRAINT FK_OPERATIONS_CLIENTS FOREIGN KEY (ID_CLIENT) REFERENCES T_CLIENTS(ID)^

/*  Check Constraints  */
/***********************************/
/*             Generators          */
/***********************************/

CREATE GENERATOR GE_CLIENTS^
CREATE GENERATOR GE_OPERATIONS^

SET GENERATOR GE_CLIENTS TO 3^
SET GENERATOR GE_OPERATIONS TO 1^

COMMIT WORK^
/***********************************/
/*              Triggers           */
/***********************************/

CREATE TRIGGER TR_CLIENTS_BI FOR T_CLIENTS
ACTIVE BEFORE INSERT POSITION 0
AS

begin
     if (NEW.ID is null) then NEW.ID = GEN_ID(GE_CLIENTS, 1);

end
 ^ 

CREATE TRIGGER TR_OPERATIONS_AD FOR T_OPERATIONS
ACTIVE AFTER DELETE POSITION 0
AS

begin
 UPDATE T_CLIENTS SET CLIENT_BALANCE=CLIENT_BALANCE-OLD.SUM_OPER;

end
 ^ 

CREATE TRIGGER TR_OPERATIONS_AI FOR T_OPERATIONS
ACTIVE AFTER INSERT POSITION 0
AS

begin
 UPDATE T_CLIENTS SET CLIENT_BALANCE=CLIENT_BALANCE+NEW.SUM_OPER;

end
 ^ 

CREATE TRIGGER TR_OPERATIONS_AU FOR T_OPERATIONS
ACTIVE AFTER UPDATE POSITION 0
AS

begin
 UPDATE T_CLIENTS SET CLIENT_BALANCE=CLIENT_BALANCE-OLD.SUM_OPER+NEW.SUM_OPER;

end
 ^ 

CREATE TRIGGER TR_OPERATIONS_BI FOR T_OPERATIONS
ACTIVE BEFORE INSERT POSITION 0
AS

begin
 if (NEW.ID is null) then NEW.ID = GEN_ID(GE_OPERATIONS, 1);

end
 ^ 

COMMIT WORK^